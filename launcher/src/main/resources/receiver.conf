receiver {

  host: "0.0.0.0"

  port: 5000

  pool: 3

  timeout: 30000

  request-strategy {

    max-queue-size: 3

  }

  producer-pool: 5

  partitioner-pool: 5

  dir {

    tmp: "/tmp"

  }

  dispatcher {
    # Dispatcher is the name of the event-based dispatcher
    type = Dispatcher
    # What kind of ExecutionService to use
    executor = "fork-join-executor"
    # Configuration for the thread pool
    thread-pool-executor {
      # minimum number of threads to cap factor-based core number to
      core-pool-size-min = 2
      # No of core threads ... ceil(available processors * factor)
      core-pool-size-factor = 2.0
      # maximum number of threads to cap factor-based number to
      core-pool-size-max = 3
    }
    # Throughput defines the maximum number of messages to be
    # processed per actor before the thread jumps to the next actor.
    # Set to 1 for as fair as possible.
    throughput = 100
  }

  kafka {

    consumer {

      brokers = "kafka:9092"

      auto-offset-reset = "earliest"

      enable-auto-commit = "true"

      auto-offset-interval-ms = 5000

      group-id = "group1"

    }

    producer {

      brokers = "kafka:9092"

    }

  }

}
